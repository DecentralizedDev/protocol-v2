import { LAMPORTS_PER_SOL } from '@solana/web3.js';
import { BN } from '../';

export const ZERO: BN = new BN(0);
export const ONE: BN = new BN(1);
export const TWO: BN = new BN(2);
export const THREE: BN = new BN(3);
export const FOUR: BN = new BN(4);
export const FIVE: BN = new BN(5);
export const SIX: BN = new BN(6);
export const SEVEN: BN = new BN(7);
export const EIGHT: BN = new BN(8);
export const NINE: BN = new BN(9);
export const TEN: BN = new BN(10);
export const TEN_THOUSAND: BN = new BN(10000);
export const BN_MAX: BN = new BN(Number.MAX_SAFE_INTEGER);
export const TEN_MILLION: BN = TEN_THOUSAND.mul(TEN_THOUSAND);

export const MAX_LEVERAGE: BN = new BN(5);
export const MAX_LEVERAGE_ORDER_SIZE: BN = new BN('18446744073709551615');

export const PERCENTAGE_PRECISION_EXP: BN = new BN(6);
export const PERCENTAGE_PRECISION: BN = new BN(10).pow(
	PERCENTAGE_PRECISION_EXP
);
export const CONCENTRATION_PRECISION: BN = PERCENTAGE_PRECISION;

export const QUOTE_PRECISION_EXP: BN = new BN(6);
export const FUNDING_RATE_BUFFER_PRECISION_EXP: BN = new BN(3);
export const PRICE_PRECISION_EXP: BN = new BN(6);
export const FUNDING_RATE_PRECISION_EXP: BN = PRICE_PRECISION_EXP.add(
	FUNDING_RATE_BUFFER_PRECISION_EXP
);
export const PEG_PRECISION_EXP: BN = new BN(6);
export const AMM_RESERVE_PRECISION_EXP: BN = new BN(9);

export const SPOT_MARKET_RATE_PRECISION_EXP: BN = new BN(6);
export const SPOT_MARKET_RATE_PRECISION: BN = new BN(10).pow(
	SPOT_MARKET_RATE_PRECISION_EXP
);

export const SPOT_MARKET_CUMULATIVE_INTEREST_PRECISION_EXP: BN = new BN(10);
export const SPOT_MARKET_CUMULATIVE_INTEREST_PRECISION: BN = new BN(10).pow(
	SPOT_MARKET_CUMULATIVE_INTEREST_PRECISION_EXP
);

export const SPOT_MARKET_UTILIZATION_PRECISION_EXP: BN = new BN(6);
export const SPOT_MARKET_UTILIZATION_PRECISION: BN = new BN(10).pow(
	SPOT_MARKET_UTILIZATION_PRECISION_EXP
);

export const SPOT_MARKET_WEIGHT_PRECISION: BN = new BN(10000);
export const SPOT_MARKET_BALANCE_PRECISION_EXP: BN = new BN(9);
export const SPOT_MARKET_BALANCE_PRECISION: BN = new BN(10).pow(
	SPOT_MARKET_BALANCE_PRECISION_EXP
);
export const SPOT_MARKET_IMF_PRECISION_EXP: BN = new BN(6);

export const SPOT_MARKET_IMF_PRECISION: BN = new BN(10).pow(
	SPOT_MARKET_IMF_PRECISION_EXP
);
export const LIQUIDATION_FEE_PRECISION: BN = new BN(1000000);

export const QUOTE_PRECISION: BN = new BN(10).pow(QUOTE_PRECISION_EXP);
export const PRICE_PRECISION: BN = new BN(10).pow(PRICE_PRECISION_EXP);
export const FUNDING_RATE_PRECISION: BN = new BN(10).pow(
	FUNDING_RATE_PRECISION_EXP
);
export const FUNDING_RATE_BUFFER_PRECISION: BN = new BN(10).pow(
	FUNDING_RATE_BUFFER_PRECISION_EXP
);
export const PEG_PRECISION: BN = new BN(10).pow(PEG_PRECISION_EXP);

export const AMM_RESERVE_PRECISION: BN = new BN(10).pow(
	AMM_RESERVE_PRECISION_EXP
);

export const BASE_PRECISION: BN = AMM_RESERVE_PRECISION;
export const BASE_PRECISION_EXP: BN = AMM_RESERVE_PRECISION_EXP;

export const AMM_TO_QUOTE_PRECISION_RATIO: BN =
	AMM_RESERVE_PRECISION.div(QUOTE_PRECISION); // 10^3
export const PRICE_DIV_PEG: BN = PRICE_PRECISION.div(PEG_PRECISION); //10^1
export const PRICE_TO_QUOTE_PRECISION: BN =
	PRICE_PRECISION.div(QUOTE_PRECISION); // 10^1
export const AMM_TIMES_PEG_TO_QUOTE_PRECISION_RATIO: BN =
	AMM_RESERVE_PRECISION.mul(PEG_PRECISION).div(QUOTE_PRECISION); // 10^9
export const MARGIN_PRECISION: BN = TEN_THOUSAND;
export const BID_ASK_SPREAD_PRECISION: BN = new BN(1000000); // 10^6
export const LIQUIDATION_PCT_PRECISION: BN = TEN_THOUSAND;
export const FUNDING_RATE_OFFSET_DENOMINATOR: BN = new BN(5000);

export const FIVE_MINUTE: BN = new BN(60 * 5);
export const ONE_HOUR: BN = new BN(60 * 60);
export const ONE_YEAR: BN = new BN(31536000);

export const QUOTE_SPOT_MARKET_INDEX = 0;

export const LAMPORTS_PRECISION: BN = new BN(LAMPORTS_PER_SOL);
export const LAMPORTS_EXP: BN = new BN(Math.log10(LAMPORTS_PER_SOL));

export const OPEN_ORDER_MARGIN_REQUIREMENT: BN = QUOTE_PRECISION.div(
	new BN(100)
);

export const DEFAULT_REVENUE_SINCE_LAST_FUNDING_SPREAD_RETREAT: BN = new BN(
	-25
).mul(QUOTE_PRECISION);
